
[core]
    excludesfile = ~/.gitignore_global
    attributesfile = ~/.gitattributes_global
    editor = vim
    precomposeunicode = false
[init]
    defaultBranch = main
[color]
    ui = true
[color "diff"]
    meta = cyan bold
    frag = cyan bold
    func = cyan bold
    old = white red
    new = green reverse
    ; commit =
    whitespace = red reverse dim
    oldMoved = red yellow
    newMoved = black yellow
    ; -- See --color-moved in git-diff(1) --
    ; oldMovedDimmed =
    ; oldMovedAlternative =
    ; oldMovedAlternativeDimmed
    ; newMovedDimmed
    ; newMovedAlternative
    ; newMovedAlternativeDimmed
    ; -- See git-range-diff(1) --
    ; contextDimmed
    ; oldDimmed
    ; newDimmed
    ; contextBold
    ; oldBold
    ; newBold
[diff]
    ; -- vim+fugitive is preferred over vimdiff. See 'fix' alias --
    tool = fugitive
    wsErrorHighlight = all
    colorMoved = zebra
[difftool "fugitive"]
    cmd = vim -f -c \"Gdiff\" \"$MERGED\"
[merge]
    tool = fugitive
[mergetool "fugitive"]
    cmd = vim -f -c \"Gdiff\" \"$MERGED\"
[alias]
    bl = blame
    br = branch
    biff = "!f() { base=${1-master}; rev=${2-HEAD}; git diff $(git merge-base $base $rev) $rev; }; f"
    bog = "!f() { base=${1-master}; rev=${2-HEAD}; git log $(git merge-base $base $rev)..$rev; }; f"
    changes = diff --stat
    ci = commit
    co = checkout
    d = !git --no-pager diff
    diffstat = !git --no-pager diff --stat -r
    dt = difftool -y
    fix = "!f() { ${EDITOR} $(git diff --name-only); }; f"
    hidden = ! git ls-files -v | grep '^h' | cut -c3-
    hide = update-index --assume-unchanged
    unhide = update-index --no-assume-unchanged
    last = !git --no-pager log -1 HEAD
    lc = log ORIG_HEAD.. --stat --no-merges
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    new = checkout -b
    pub = publish
    publish = "!f() { branch=${2-$(git rev-parse --abbrev-ref HEAD)}; remote=${1-$(git remote)}; git push -u $remote $branch; }; f"
    puff = pull --ff-only
    s = status
    sha = "!f() { git rev-parse --short ${1-HEAD}; }; f"
    stl = !git stash show -n${1-10}
    sts = !git stash show -p
    who = !git --no-pager shortlog -sne
    words = diff --color-words
    w = !git --no-pager diff --color-words
[blame]
    date = short
[push]
    default = simple
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[include]
    path = ~/.gitconfig.user
[hub]
    protocol = https
